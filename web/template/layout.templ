package template

import (
    "strconv"
    "crypto/rand"
	"fmt"
)

// assetVersion is package level variable that holds a random string for cache busting
var assetVersion string

// init generates a random string for the assetVersion
func init() {
	b := make([]byte, 16)
	_, _ = rand.Read(b)
	assetVersion = fmt.Sprintf("%x", b)
}

templ layout() {
  <html lang="en">
    <head>
      <meta charset="utf-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
      <link rel="preconnect" href="https://fonts.googleapis.com" />
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
      <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" />
      <link rel="stylesheet" href={"/assets/main.css?" + assetVersion } />
      <title>it.getsit</title>
    </head>
    <body>
      <div class="h-full p-4 antialiased sm:p-10 text-gray bg-gray-light">
        { children... }
      </div>
    </body>
  </html>
}

templ Homepage() {
    @layout() {
        <div class="max-w-2xl mx-auto">
            <h1 class="text-3xl font-bold text-center text-gray-lighter bg-green-dark">it.getsit</h1>
            <p class="text-center text-gray">Shorten your URLs</p>
            <div class="mt-4">
                <form action="/create" method="post">
                    <input type="url" name="url" class="w-full p-2 mb-2 text-center bg-blue-light border border-blue-dark rounded" placeholder="Enter URL" required />
                    <button type="submit" class="w-full p-2 text-center bg-green-dark text-gray border border-gray-light rounded hover:bg-green-light">Shorten</button>
                </form>

                <div>Welcome to it.getsit</div>
                <div>Shorten your URLs</div>
                <div>Usage:</div>
                <ol class="list-none">
                    <li>To create a new short url, send a POST request to /create with the url parameter</li>
                    <li>To get information about a short url, send a GET request to /i/{"{token}"}</li>
                    <li>To redirect to a short url, send a GET request to /{"{token}"}</li>
                    <li>Repeat at step 1 to create more short urls.</li>
                </ol>
            </div>
        </div>
    }
}

templ Info(url string, token string, visitCount int) {
    @layout() {
        <div class="max-w-2xl mx-auto">
            <h1 class="text-3xl font-bold text-center text-white">it.getsit</h1>
            <p class="text-center text-white">Shorten your URLs</p>
            <div>
                <div>Token: {token}</div>
                <div>Url: {url}</div>
                <div>Visit Count: {strconv.Itoa(visitCount)}</div>
            </div>
            <a href="/">Shorten another URL</a>
        </div>
    }
}

templ Message(message string) {
    <div id="message">
        if message != "" {
            <div class="p-2 mb-2 text-center bg-green-100 border border-green-200 rounded">{message}</div>
        }
    </div>
}

templ Errors(errors map[string]string) {
    <div id="errors">
        if len(errors) > 0 {
            <ul class="p-2 mb-2 text-center border rounded">
                for _ , value := range errors {
                    <li>{value}</li>
                }
            </ul>
        }
    </div>
}
